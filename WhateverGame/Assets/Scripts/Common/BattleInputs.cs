//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/BattleInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @BattleInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @BattleInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""BattleInputs"",
    ""maps"": [
        {
            ""name"": ""MainBattleControl"",
            ""id"": ""f5c6f559-acca-4fb5-bdcb-91cbeb1949e8"",
            ""actions"": [
                {
                    ""name"": ""CursorMovement"",
                    ""type"": ""Value"",
                    ""id"": ""5fbbdba6-9294-4e39-94f5-dff55cd0ec0f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraAngle"",
                    ""type"": ""Value"",
                    ""id"": ""165fc474-d5ad-44ad-885a-fe6f349e0fa1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""A_Button"",
                    ""type"": ""Button"",
                    ""id"": ""46fac9fc-5be2-4210-b6c9-10e2aa2b4cd4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""X_Button"",
                    ""type"": ""Button"",
                    ""id"": ""a5a16d0b-4630-48c6-92cb-d210ddeddfb0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Y_Button"",
                    ""type"": ""Button"",
                    ""id"": ""0847c058-45ca-4b21-ba12-462b2f213559"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B_Button"",
                    ""type"": ""Button"",
                    ""id"": ""feca244a-36e4-4f24-81f8-9f05470eeff3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R_Shoulder"",
                    ""type"": ""Button"",
                    ""id"": ""6d782d4c-db15-4f76-bd40-5cd3284cb45e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1e2d6665-c5b2-4063-9907-c628ec945770"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BattleControlGamePad"",
                    ""action"": ""CursorMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16d40137-ef2b-4504-acec-4bf0357bde3a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BattleControlGamePad"",
                    ""action"": ""A_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16339e10-4f6d-4bf7-81dc-9e684f1b8471"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BattleControlGamePad"",
                    ""action"": ""X_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dd2a984-3859-44bc-87dd-84923fe5302f"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BattleControlGamePad"",
                    ""action"": ""Y_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""862d4038-9acb-43e7-b556-9f837ab708bc"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BattleControlGamePad"",
                    ""action"": ""B_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1bbc3a7-0142-4849-aace-465f3410c987"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BattleControlGamePad"",
                    ""action"": ""CameraAngle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84eab85d-3e26-435a-a124-14fc860c4d49"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BattleControlGamePad"",
                    ""action"": ""R_Shoulder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""BattleControlGamePad"",
            ""bindingGroup"": ""BattleControlGamePad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // MainBattleControl
        m_MainBattleControl = asset.FindActionMap("MainBattleControl", throwIfNotFound: true);
        m_MainBattleControl_CursorMovement = m_MainBattleControl.FindAction("CursorMovement", throwIfNotFound: true);
        m_MainBattleControl_CameraAngle = m_MainBattleControl.FindAction("CameraAngle", throwIfNotFound: true);
        m_MainBattleControl_A_Button = m_MainBattleControl.FindAction("A_Button", throwIfNotFound: true);
        m_MainBattleControl_X_Button = m_MainBattleControl.FindAction("X_Button", throwIfNotFound: true);
        m_MainBattleControl_Y_Button = m_MainBattleControl.FindAction("Y_Button", throwIfNotFound: true);
        m_MainBattleControl_B_Button = m_MainBattleControl.FindAction("B_Button", throwIfNotFound: true);
        m_MainBattleControl_R_Shoulder = m_MainBattleControl.FindAction("R_Shoulder", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MainBattleControl
    private readonly InputActionMap m_MainBattleControl;
    private IMainBattleControlActions m_MainBattleControlActionsCallbackInterface;
    private readonly InputAction m_MainBattleControl_CursorMovement;
    private readonly InputAction m_MainBattleControl_CameraAngle;
    private readonly InputAction m_MainBattleControl_A_Button;
    private readonly InputAction m_MainBattleControl_X_Button;
    private readonly InputAction m_MainBattleControl_Y_Button;
    private readonly InputAction m_MainBattleControl_B_Button;
    private readonly InputAction m_MainBattleControl_R_Shoulder;
    public struct MainBattleControlActions
    {
        private @BattleInputs m_Wrapper;
        public MainBattleControlActions(@BattleInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @CursorMovement => m_Wrapper.m_MainBattleControl_CursorMovement;
        public InputAction @CameraAngle => m_Wrapper.m_MainBattleControl_CameraAngle;
        public InputAction @A_Button => m_Wrapper.m_MainBattleControl_A_Button;
        public InputAction @X_Button => m_Wrapper.m_MainBattleControl_X_Button;
        public InputAction @Y_Button => m_Wrapper.m_MainBattleControl_Y_Button;
        public InputAction @B_Button => m_Wrapper.m_MainBattleControl_B_Button;
        public InputAction @R_Shoulder => m_Wrapper.m_MainBattleControl_R_Shoulder;
        public InputActionMap Get() { return m_Wrapper.m_MainBattleControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainBattleControlActions set) { return set.Get(); }
        public void SetCallbacks(IMainBattleControlActions instance)
        {
            if (m_Wrapper.m_MainBattleControlActionsCallbackInterface != null)
            {
                @CursorMovement.started -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnCursorMovement;
                @CursorMovement.performed -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnCursorMovement;
                @CursorMovement.canceled -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnCursorMovement;
                @CameraAngle.started -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnCameraAngle;
                @CameraAngle.performed -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnCameraAngle;
                @CameraAngle.canceled -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnCameraAngle;
                @A_Button.started -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnA_Button;
                @A_Button.performed -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnA_Button;
                @A_Button.canceled -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnA_Button;
                @X_Button.started -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnX_Button;
                @X_Button.performed -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnX_Button;
                @X_Button.canceled -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnX_Button;
                @Y_Button.started -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnY_Button;
                @Y_Button.performed -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnY_Button;
                @Y_Button.canceled -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnY_Button;
                @B_Button.started -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnB_Button;
                @B_Button.performed -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnB_Button;
                @B_Button.canceled -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnB_Button;
                @R_Shoulder.started -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnR_Shoulder;
                @R_Shoulder.performed -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnR_Shoulder;
                @R_Shoulder.canceled -= m_Wrapper.m_MainBattleControlActionsCallbackInterface.OnR_Shoulder;
            }
            m_Wrapper.m_MainBattleControlActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CursorMovement.started += instance.OnCursorMovement;
                @CursorMovement.performed += instance.OnCursorMovement;
                @CursorMovement.canceled += instance.OnCursorMovement;
                @CameraAngle.started += instance.OnCameraAngle;
                @CameraAngle.performed += instance.OnCameraAngle;
                @CameraAngle.canceled += instance.OnCameraAngle;
                @A_Button.started += instance.OnA_Button;
                @A_Button.performed += instance.OnA_Button;
                @A_Button.canceled += instance.OnA_Button;
                @X_Button.started += instance.OnX_Button;
                @X_Button.performed += instance.OnX_Button;
                @X_Button.canceled += instance.OnX_Button;
                @Y_Button.started += instance.OnY_Button;
                @Y_Button.performed += instance.OnY_Button;
                @Y_Button.canceled += instance.OnY_Button;
                @B_Button.started += instance.OnB_Button;
                @B_Button.performed += instance.OnB_Button;
                @B_Button.canceled += instance.OnB_Button;
                @R_Shoulder.started += instance.OnR_Shoulder;
                @R_Shoulder.performed += instance.OnR_Shoulder;
                @R_Shoulder.canceled += instance.OnR_Shoulder;
            }
        }
    }
    public MainBattleControlActions @MainBattleControl => new MainBattleControlActions(this);
    private int m_BattleControlGamePadSchemeIndex = -1;
    public InputControlScheme BattleControlGamePadScheme
    {
        get
        {
            if (m_BattleControlGamePadSchemeIndex == -1) m_BattleControlGamePadSchemeIndex = asset.FindControlSchemeIndex("BattleControlGamePad");
            return asset.controlSchemes[m_BattleControlGamePadSchemeIndex];
        }
    }
    public interface IMainBattleControlActions
    {
        void OnCursorMovement(InputAction.CallbackContext context);
        void OnCameraAngle(InputAction.CallbackContext context);
        void OnA_Button(InputAction.CallbackContext context);
        void OnX_Button(InputAction.CallbackContext context);
        void OnY_Button(InputAction.CallbackContext context);
        void OnB_Button(InputAction.CallbackContext context);
        void OnR_Shoulder(InputAction.CallbackContext context);
    }
}
